services:
  nginx:
    image: nginx:1.18.0
    container_name: nginx
    restart: always
    ports:
      - "443:443"
    volumes:
      - /home/${HOME}/data/nginx/ssl:/etc/nginx/ssl
      - ./nginx.conf:/etc/nginx/nginx.conf

  mariadb:
    image: mariadb
    container_name: mariadb
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - /home/${HOME}/data/mysql:/var/lib/mysql
    networks:
      - inception

  wordpress:
    image: wordpress:cli
    container_name: wordpress
    restart: always
    depends_on:
      - mariadb
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    volumes:
      - /home/${HOME}/data/wordpress:/var/www/html
    entrypoint: >
      sh -c "
        # Espera a que MariaDB esté disponible
        until wp db check --allow-root; do sleep 2; done &&
        # Crea wp-config.php (si no existe)
        wp config create --dbname=${WORDPRESS_DB_NAME} --dbuser=${WORDPRESS_DB_USER} --dbpass=${WORDPRESS_DB_PASSWORD} --dbhost=${WORDPRESS_DB_HOST} --allow-root &&
        # Instala WordPress (si aún no se ha instalado)
        wp core install --url=https://${DOMAIN_NAME} --title='${WORDPRESS_TITLE}' --admin_user=${WORDPRESS_ADMIN} --admin_password=${WORDPRESS_ADMIN_PASS} --admin_email=${WORDPRESS_ADMIN_EMAIL} --skip-email --allow-root
      "

# Network
networks:
  inception:
    name: inception
    driver: bridge

# Volumes
volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/mysql
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/wordpress
      o: bind
